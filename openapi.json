{
  "openapi": "3.1.0",
  "info": {
    "title": "Echoo API",
    "description": "FastAPI backend for Echoo with event management, authentication, and FotoOwl integration",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/login": {
      "post": {
        "tags": ["authentication"],
        "summary": "Login",
        "description": "Login endpoint with basic authentication\nReturns success message with full user profile if credentials are valid",
        "operationId": "login_api_v1_login_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/register": {
      "post": {
        "tags": ["authentication"],
        "summary": "Register",
        "description": "Register a new user",
        "operationId": "register_api_v1_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/profile": {
      "get": {
        "tags": ["profile"],
        "summary": "Get Profile",
        "description": "Get current user's profile information\nRequires basic authentication",
        "operationId": "get_profile_api_v1_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      },
      "put": {
        "tags": ["profile"],
        "summary": "Update Profile",
        "description": "Update user profile information\nRequires basic authentication",
        "operationId": "update_profile_api_v1_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/internal/images": {
      "post": {
        "tags": ["images"],
        "summary": "Create Image",
        "description": "Internal API to create a new image record\nRequires internal service authentication\nRequired fields: 'name' and 'user_id'. All others are optional\n\nIf is_selfie=true, updates user's selfie_cid and selfie_url fields",
        "operationId": "create_image_api_v1_internal_images_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/internal/images/{image_id}": {
      "get": {
        "tags": ["images"],
        "summary": "Get Image",
        "description": "Internal API to get image by ID\nRequires internal service authentication",
        "operationId": "get_image_api_v1_internal_images__image_id__get",
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["images"],
        "summary": "Update Image",
        "description": "Internal API to update an existing image record by ID\nRequires internal service authentication\nOnly provided fields will be updated\n\nIf is_selfie=true, updates user's selfie_cid and selfie_url fields",
        "operationId": "update_image_api_v1_internal_images__image_id__put",
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/images": {
      "get": {
        "tags": ["images"],
        "summary": "Get User Images",
        "description": "Get all images for the authenticated user\nRequires user authentication\nEach image includes computed 'image_url' field: filecoin_url if available, otherwise fotoowl_url",
        "operationId": "get_user_images_api_v1_images_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ImageListResponse"
                  },
                  "type": "array",
                  "title": "Response Get User Images Api V1 Images Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/images/{image_id}": {
      "get": {
        "tags": ["images"],
        "summary": "Get User Image",
        "description": "Get a specific image for the authenticated user\nRequires user authentication",
        "operationId": "get_user_image_api_v1_images__image_id__get",
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/getImageList": {
      "get": {
        "tags": ["images"],
        "summary": "Get Image List",
        "description": "Get image list for the authenticated user\nRequires user authentication\n\nBy default (no filters), returns images where user_id matches the authenticated user.\nEach image includes computed 'image_url' field: filecoin_url if available, otherwise fotoowl_url\n\nOptional filters:\n- limit: Maximum number of images to return (1-100)\n- offset: Number of images to skip (for pagination)  \n- event_id: Filter by specific event_id",
        "operationId": "get_image_list_api_v1_getImageList_get",
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum number of images to return",
              "title": "Limit"
            },
            "description": "Maximum number of images to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of images to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of images to skip"
          },
          {
            "name": "event_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific event_id",
              "title": "Event Id"
            },
            "description": "Filter by specific event_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageListResponse"
                  },
                  "title": "Response Get Image List Api V1 Getimagelist Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/register-event": {
      "post": {
        "tags": ["events"],
        "summary": "Register For Event",
        "description": "Register user for a FotoOwl event\nRequires user authentication\nUses user's selfie_url to upload image to FotoOwl API",
        "operationId": "register_for_event_api_v1_register_event_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRegistrationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/my-registrations": {
      "get": {
        "tags": ["events"],
        "summary": "Get User Registrations",
        "description": "Get all event registrations for the authenticated user",
        "operationId": "get_user_registrations_api_v1_my_registrations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/registration/{event_id}": {
      "get": {
        "tags": ["events"],
        "summary": "Get Event Registration",
        "description": "Get specific event registration for the authenticated user",
        "operationId": "get_event_registration_api_v1_registration__event_id__get",
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/my-registered-events": {
      "get": {
        "tags": ["events"],
        "summary": "Get User Registered Events",
        "description": "Get all events that the authenticated user has registered for\nReturns combined data from EventRequestMapping and Events tables",
        "operationId": "get_user_registered_events_api_v1_my_registered_events_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RegisteredEventResponse"
                  },
                  "type": "array",
                  "title": "Response Get User Registered Events Api V1 My Registered Events Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/get-event-matched-image-list": {
      "get": {
        "tags": ["events"],
        "summary": "Get Event Matched Image List",
        "description": "Get matched images from FotoOwl API for a specific event with pagination support\n\n1. Find user's registration for the event (get request_id automatically)\n2. Get registration details (request_key, event_key)\n3. Call FotoOwl API to get matched images with pagination\n4. Match FotoOwl images with our Images table\n5. Return images in same format as /images endpoint with image_url\n\nPagination:\n- page: Starting from 0 (FotoOwl API format)\n- page_size: Number of images per page, -1 for all images",
        "operationId": "get_event_matched_image_list_api_v1_get_event_matched_image_list_get",
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "FotoOwl event ID",
              "title": "Event Id"
            },
            "description": "FotoOwl event ID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Page number starting from 0",
              "default": 0,
              "title": "Page"
            },
            "description": "Page number starting from 0"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": -1,
              "description": "Number of images per page. Use -1 for all images",
              "default": 10,
              "title": "Page Size"
            },
            "description": "Number of images per page. Use -1 for all images"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageListResponse"
                  },
                  "title": "Response Get Event Matched Image List Api V1 Get Event Matched Image List Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/getEventList": {
      "get": {
        "tags": ["public-events"],
        "summary": "Get Event List",
        "description": "Get list of all public events\nNo authentication required - this is a public API\n\nOptional parameters:\n- limit: Maximum number of events to return (1-100)\n- offset: Number of events to skip (for pagination)\n\nReturns events ordered by event_date descending (latest events first)",
        "operationId": "get_event_list_api_v1_getEventList_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum number of events to return",
              "title": "Limit"
            },
            "description": "Maximum number of events to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of events to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of events to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResponse"
                  },
                  "title": "Response Get Event List Api V1 Geteventlist Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/getEventList/{event_id}": {
      "get": {
        "tags": ["public-events"],
        "summary": "Get Event By Id",
        "description": "Get a specific event by ID\nNo authentication required - this is a public API",
        "operationId": "get_event_by_id_api_v1_getEventList__event_id__get",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EventRegistrationRequest": {
        "properties": {
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "key": {
            "type": "string",
            "title": "Key"
          }
        },
        "type": "object",
        "required": ["event_id", "key"],
        "title": "EventRegistrationRequest"
      },
      "EventRegistrationResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "fotoowl_event_id": {
            "type": "integer",
            "title": "Fotoowl Event Id"
          },
          "request_id": {
            "type": "integer",
            "title": "Request Id"
          },
          "request_key": {
            "type": "string",
            "title": "Request Key"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "redirect_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Url"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "fotoowl_event_id",
          "request_id",
          "request_key",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "EventRegistrationResponse"
      },
      "EventResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "event_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Date"
          },
          "fotoowl_event_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Event Id"
          },
          "fotoowl_event_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Event Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["id", "name", "created_at", "updated_at"],
        "title": "EventResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "is_selfie": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Selfie",
            "default": false
          },
          "fotoowl_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Id"
          },
          "fotoowl_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Url"
          },
          "filecoin_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filecoin Url"
          },
          "filecoin_cid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filecoin Cid"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "image_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Encoding"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "ImageCreate"
      },
      "ImageListResponse": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "fotoowl_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Id"
          },
          "fotoowl_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Url"
          },
          "filecoin_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filecoin Url"
          },
          "filecoin_cid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filecoin Cid"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "image_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Encoding"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "ImageListResponse"
      },
      "ImageResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "fotoowl_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Id"
          },
          "fotoowl_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Url"
          },
          "filecoin_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filecoin Url"
          },
          "filecoin_cid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filecoin Cid"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "image_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Encoding"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["id", "name", "created_at", "updated_at"],
        "title": "ImageResponse"
      },
      "ImageUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "is_selfie": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Selfie",
            "default": false
          },
          "fotoowl_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Id"
          },
          "fotoowl_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Url"
          },
          "filecoin_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filecoin Url"
          },
          "filecoin_cid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filecoin Cid"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "image_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Encoding"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          }
        },
        "type": "object",
        "title": "ImageUpdate"
      },
      "RegisteredEventResponse": {
        "properties": {
          "registration_id": {
            "type": "integer",
            "title": "Registration Id"
          },
          "request_id": {
            "type": "integer",
            "title": "Request Id"
          },
          "request_key": {
            "type": "string",
            "title": "Request Key"
          },
          "redirect_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Url"
          },
          "registration_created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Registration Created At"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          },
          "event_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Name"
          },
          "event_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Description"
          },
          "event_cover_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Cover Image Url"
          },
          "event_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Date"
          },
          "fotoowl_event_id": {
            "type": "integer",
            "title": "Fotoowl Event Id"
          },
          "fotoowl_event_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fotoowl Event Key"
          }
        },
        "type": "object",
        "required": [
          "registration_id",
          "request_id",
          "request_key",
          "registration_created_at",
          "fotoowl_event_id"
        ],
        "title": "RegisteredEventResponse"
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "UserCreate"
      },
      "UserLoginResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          }
        },
        "type": "object",
        "required": ["message", "user"],
        "title": "UserLoginResponse"
      },
      "UserProfile": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "instagram_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Url"
          },
          "twitter_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Url"
          },
          "linkedin_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Linkedin Url"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "selfie_cid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selfie Cid"
          },
          "selfie_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selfie Url"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["id", "username", "created_at", "updated_at"],
        "title": "UserProfile"
      },
      "UserProfileUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "instagram_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Url"
          },
          "twitter_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Url"
          },
          "linkedin_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Linkedin Url"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "UserProfileUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBasic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}
